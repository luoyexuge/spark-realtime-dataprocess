\set ON_ERROR_STOP 1

set statement_timeout = 300000;

drop external table if exists staging.eventdatas_hd_ext_:batchid;
create external table staging.eventdatas_hd_ext_:batchid (
  id numeric(39,0),
  event_id int,
  event_date timestamp without time zone,
  refer_site text,
  event_one int,
  event_two text,
  event_three text,
  event_four text,
  event_five text,
  event_six text,
  opxpid text,
  opxsid text,
  opxid text,
  lead_site text,
  e_date_raw int,
  has_hash int,
  leading_site text,
  leading_keyword text,
  useragent text,
  source_channel text,
  client_id int,
  universal_tag_flag int,
  ip bigint,
  countryshort varchar(2),
  countrylong text,
  ipcity text,
  event_machine bigint,
  ip_filter_flag int,
  robot_filter_flag int,
  domain_filter_flag int,
  valid_flag int,
  dummy01 text,
  dummy02 text,
  dummy03 text,
  dummy04 text,
  dummy05 text,
  dummy06 text,
  dummy07 text,
  dummy08 text,
  dummy09 text,
  dummy10 text,
  dummy11 text,
  dummy12 text,
  dummy13 text,
  dummy14 text,
  dummy15 text,
  dummy16 text,
  dummy17 text,
  dummy18 text,
  dummy19 text,
  dummy20 text,
  rnum varchar(100) 
)
location (:hdfsloc)
format 'text' (null '' escape 'OFF' fill missing fields)
log errors into staging.hd_ext_load_errors segment reject limit 300 rows;

create temporary table eventdatas_hd_load (
    id numeric(39,0) NOT NULL,
    event_id integer NOT NULL,
    event_date timestamp without time zone NOT NULL,
    refer_site text,
    event_one character varying(255),
    event_two character varying(255),
    event_three character varying(255),
    event_four character varying(255),
    event_five character varying(255),
    event_six character varying(255),
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone,
    searchengine_id integer,
    opxpid character varying(50),
    opxsid character varying(50),
    opxid character varying(50),
    campaign_id integer NOT NULL,
    lead_site text,
    ip character varying(50),
    e_date integer NOT NULL,
    hash_period smallint,
    k_date integer,
    event_machine character varying(16),
    leading_site character varying(255),
    leading_keyword character varying(100),
    dw_loaded_at timestamp without time zone DEFAULT now(),
    has_hash smallint,
    useragent character varying(500),
    source_channel character varying(30),
    client_id integer,
    ipcity character varying(44),
    countryshort character varying(2),
    rnum character varying(30)
) DISTRIBUTED BY (opxpid);

insert into eventdatas_hd_load (
  id,
  event_id,
  event_date,
  refer_site,
  event_one,
  event_two,
  event_three,
  event_four,
  event_five,
  event_six,
  created_at,
  updated_at,
  opxpid,
  opxsid,
  opxid,
  campaign_id,
  lead_site,
  ip,
  e_date,
  event_machine,
  leading_site,
  leading_keyword,
  dw_loaded_at,
  has_hash,
  useragent,
  source_channel,
  client_id,
  ipcity,
  countryshort,
  rnum
)
select
  id,
  event_id,
  event_date,
  refer_site,
  event_one,
  substr(event_two, 1, 255),
  substr(event_three, 1, 255),
  substr(event_four, 1, 255),
  substr(event_five, 1, 255),
  substr(event_six, 1, 255),
  current_timestamp at time zone 'utc' created_at,
  current_timestamp at time zone 'utc' updated_at,
  substr(opxpid, 1, 50),
  substr(opxsid, 1, 50),
  substr(opxid, 1, 50),
  -1 campaign_id,
  lead_site,
  host('0.0.0.0'::inet + ip) ip,
  e_date_raw,
  host('0.0.0.0'::inet + event_machine) event_machine,
  substr(leading_site, 1, 255),
  substr(leading_keyword, 1, 100),
  current_timestamp dw_loaded_at,
  has_hash,
  substr(useragent, 1, 500),
  substr(source_channel, 1, 30),
  client_id,
  substr(ipcity, 1, 44),
  substr(countryshort, 1, 2),
  substr(rnum, 1, 30)
from staging.eventdatas_hd_ext_:batchid
where valid_flag = 1;

insert into xmo_dw.eventdatas
select * from eventdatas_hd_load;

drop external table staging.eventdatas_hd_ext_:batchid;

